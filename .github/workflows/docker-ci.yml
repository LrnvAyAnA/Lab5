# name: Docker CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#   workflow_dispatch: #

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Build Data Manager Image
#         run: docker build -t myapp-data-manager ./data_manager

#       - name: Build Recognition Service Image
#         run: docker build -t myapp-recognition-service ./recognition_service

#       - name: Install dependencies
#         run: pip install pytest

#       - name: Run tests
#         run: pytest tests/

name: Docker CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Позволяет запускать вручную

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Data Manager Image
        run: docker build -t myapp-data-manager ./data_manager

      - name: Build Recognition Service Image
        run: docker build -t myapp-recognition-service ./recognition_service

      - name: Install dependencies
        run: pip install pytest

      # Запуск docker-compose
      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d # Запуск контейнеров в фоновом режиме

      # Ожидание, пока сервисы не будут доступны
      - name: Wait for services to be ready
        run: |
          # Ожидаем, пока контейнеры будут доступны
          echo "Waiting for data_manager service to be available..."
          until curl --silent --fail http://localhost:5000; do
            echo "Waiting..."
            sleep 5
          done
          echo "Data Manager is available!"

          echo "Waiting for recognition_service to be available..."
          until curl --silent --fail http://localhost:5001; do
            echo "Waiting..."
            sleep 5
          done
          echo "Recognition Service is available!"

      - name: Run tests
        run: |
          echo "Running tests..."
          pytest tests/
